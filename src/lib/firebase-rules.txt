// === FIRESTORE RULES === //
// Example Firestore security rules file for your Firebase project

rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Global functions for common security checks
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwnData(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // User profiles - users can read/write their own profiles only
    match /userProfiles/{userId} {
      allow read: if isSignedIn() && isOwnData(userId);
      allow create: if isSignedIn() && isOwnData(userId);
      allow update: if isSignedIn() && isOwnData(userId);
      allow delete: if isAdmin();
    }
    
    // User progress data - users can only access their own data
    match /userProgress/{docId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow write: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }
    
    // Chat messages
    match /chatMessages/{messageId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update: if false; // Messages should not be editable
      allow delete: if isAdmin();
    }
    
    // Notifications
    match /notifications/{notificationId} {
      allow read: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow write: if false; // Only server can create notifications
    }
    
    // User streaks
    match /userStreaks/{userId} {
      allow read: if isSignedIn() && isOwnData(userId);
      allow write: if isSignedIn() && isOwnData(userId);
    }
  }
}

// === STORAGE RULES === //
// Example Storage security rules file for your Firebase project

rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Global functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwnData(userId) {
      return request.auth.uid == userId;
    }
    
    // Profile photos
    match /profilePhotos/{userId} {
      allow read: if true; // Allow public reading of profile photos
      allow write: if isSignedIn() && isOwnData(userId);
      allow delete: if isSignedIn() && isOwnData(userId);
    }
    
    // Other user files
    match /userFiles/{userId}/{allFiles=**} {
      allow read: if isSignedIn() && isOwnData(userId);
      allow write: if isSignedIn() && isOwnData(userId);
    }
  }
} 